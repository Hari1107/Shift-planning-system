{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harih\\\\Downloads\\\\Telegram Desktop\\\\Shift_Planning_System\\\\Shift_Planning_System\\\\src\\\\components\\\\Admin\\\\EmployeeAvailability.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EmployeeAvailability() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const [availability, setAvailability] = useState([]);\n  const [selectedTimezone, setSelectedTimezone] = useState('');\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('/api/admin/employees');\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n    }\n  };\n  const fetchAvailability = async employeeId => {\n    try {\n      const response = await axios.get(`/api/admin/availability/${employeeId}`);\n      setAvailability(response.data);\n      setSelectedTimezone(response.data[0].timezone);\n    } catch (error) {\n      console.error('Error fetching availability:', error);\n    }\n  };\n  const handleEmployeeChange = e => {\n    setSelectedEmployee(e.target.value);\n    fetchAvailability(e.target.value);\n  };\n  const convertTimezone = (date, time, fromTz, toTz) => {\n    return moment.tz(`${date} ${time}`, fromTz).tz(toTz).format('HH:mm');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedEmployee,\n      onChange: handleEmployeeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: employee._id,\n        children: employee.name\n      }, employee._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), availability.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Availability for \", employees.find(e => e._id === selectedEmployee).name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTimezone,\n        onChange: e => setSelectedTimezone(e.target.value),\n        children: moment.tz.names().map(tz => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tz,\n          children: tz\n        }, tz, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: availability.map((a, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(a.date).format('YYYY-MM-DD')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: convertTimezone(a.date, a.startTime, a.timezone, selectedTimezone)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: convertTimezone(a.date, a.endTime, a.timezone, selectedTimezone)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeAvailability, \"d2V/vx65yaVFArUTcG9lUo638m0=\");\n_c = EmployeeAvailability;\nexport default EmployeeAvailability;\nvar _c;\n$RefreshReg$(_c, \"EmployeeAvailability\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeAvailability","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","availability","setAvailability","selectedTimezone","setSelectedTimezone","fetchEmployees","response","get","data","error","console","fetchAvailability","employeeId","timezone","handleEmployeeChange","e","target","value","convertTimezone","date","time","fromTz","toTz","tz","format","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","employee","_id","name","length","find","names","a","index","startTime","endTime","_c","$RefreshReg$"],"sources":["C:/Users/harih/Downloads/Telegram Desktop/Shift_Planning_System/Shift_Planning_System/src/components/Admin/EmployeeAvailability.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment-timezone';\r\n\r\nfunction EmployeeAvailability() {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n  const [availability, setAvailability] = useState([]);\r\n  const [selectedTimezone, setSelectedTimezone] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('/api/admin/employees');\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n    }\r\n  };\r\n\r\n  const fetchAvailability = async (employeeId) => {\r\n    try {\r\n      const response = await axios.get(`/api/admin/availability/${employeeId}`);\r\n      setAvailability(response.data);\r\n      setSelectedTimezone(response.data[0].timezone);\r\n    } catch (error) {\r\n      console.error('Error fetching availability:', error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    setSelectedEmployee(e.target.value);\r\n    fetchAvailability(e.target.value);\r\n  };\r\n\r\n  const convertTimezone = (date, time, fromTz, toTz) => {\r\n    return moment.tz(`${date} ${time}`, fromTz).tz(toTz).format('HH:mm');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Employee Availability</h2>\r\n      <select value={selectedEmployee} onChange={handleEmployeeChange}>\r\n        <option value=\"\">Select an employee</option>\r\n        {employees.map((employee) => (\r\n          <option key={employee._id} value={employee._id}>\r\n            {employee.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {availability.length > 0 && (\r\n        <>\r\n          <h3>Availability for {employees.find((e) => e._id === selectedEmployee).name}</h3>\r\n          <select\r\n            value={selectedTimezone}\r\n            onChange={(e) => setSelectedTimezone(e.target.value)}\r\n          >\r\n            {moment.tz.names().map((tz) => (\r\n              <option key={tz} value={tz}>\r\n                {tz}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Start Time</th>\r\n                <th>End Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {availability.map((a, index) => (\r\n                <tr key={index}>\r\n                  <td>{moment(a.date).format('YYYY-MM-DD')}</td>\r\n                  <td>{convertTimezone(a.date, a.startTime, a.timezone, selectedTimezone)}</td>\r\n                  <td>{convertTimezone(a.date, a.endTime, a.timezone, selectedTimezone)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeAvailability;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,sBAAsB,CAAC;MACxDT,YAAY,CAACQ,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC9C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,2BAA2BK,UAAU,EAAE,CAAC;MACzEV,eAAe,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC9BJ,mBAAmB,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACK,QAAQ,CAAC;IAChD,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMK,oBAAoB,GAAIC,CAAC,IAAK;IAClCf,mBAAmB,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACnCN,iBAAiB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,KAAK;IACpD,OAAOhC,MAAM,CAACiC,EAAE,CAAC,GAAGJ,IAAI,IAAIC,IAAI,EAAE,EAAEC,MAAM,CAAC,CAACE,EAAE,CAACD,IAAI,CAAC,CAACE,MAAM,CAAC,OAAO,CAAC;EACtE,CAAC;EAED,oBACEhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BrC,OAAA;MAAQyB,KAAK,EAAElB,gBAAiB;MAAC+B,QAAQ,EAAEhB,oBAAqB;MAAAW,QAAA,gBAC9DjC,OAAA;QAAQyB,KAAK,EAAC,EAAE;QAAAQ,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3ChC,SAAS,CAACkC,GAAG,CAAEC,QAAQ,iBACtBxC,OAAA;QAA2ByB,KAAK,EAAEe,QAAQ,CAACC,GAAI;QAAAR,QAAA,EAC5CO,QAAQ,CAACE;MAAI,GADHF,QAAQ,CAACC,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAER5B,YAAY,CAACkC,MAAM,GAAG,CAAC,iBACtB3C,OAAA,CAAAE,SAAA;MAAA+B,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,GAAI,mBAAiB,EAAC5B,SAAS,CAACuC,IAAI,CAAErB,CAAC,IAAKA,CAAC,CAACkB,GAAG,KAAKlC,gBAAgB,CAAC,CAACmC,IAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClFrC,OAAA;QACEyB,KAAK,EAAEd,gBAAiB;QACxB2B,QAAQ,EAAGf,CAAC,IAAKX,mBAAmB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAQ,QAAA,EAEpDnC,MAAM,CAACiC,EAAE,CAACc,KAAK,CAAC,CAAC,CAACN,GAAG,CAAER,EAAE,iBACxB/B,OAAA;UAAiByB,KAAK,EAAEM,EAAG;UAAAE,QAAA,EACxBF;QAAE,GADQA,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEP,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTrC,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UAAAiC,QAAA,eACEjC,OAAA;YAAAiC,QAAA,gBACEjC,OAAA;cAAAiC,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbrC,OAAA;cAAAiC,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBrC,OAAA;cAAAiC,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRrC,OAAA;UAAAiC,QAAA,EACGxB,YAAY,CAAC8B,GAAG,CAAC,CAACO,CAAC,EAAEC,KAAK,kBACzB/C,OAAA;YAAAiC,QAAA,gBACEjC,OAAA;cAAAiC,QAAA,EAAKnC,MAAM,CAACgD,CAAC,CAACnB,IAAI,CAAC,CAACK,MAAM,CAAC,YAAY;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9CrC,OAAA;cAAAiC,QAAA,EAAKP,eAAe,CAACoB,CAAC,CAACnB,IAAI,EAAEmB,CAAC,CAACE,SAAS,EAAEF,CAAC,CAACzB,QAAQ,EAAEV,gBAAgB;YAAC;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7ErC,OAAA;cAAAiC,QAAA,EAAKP,eAAe,CAACoB,CAAC,CAACnB,IAAI,EAAEmB,CAAC,CAACG,OAAO,EAAEH,CAAC,CAACzB,QAAQ,EAAEV,gBAAgB;YAAC;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAHpEU,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACR,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CArFQD,oBAAoB;AAAA+C,EAAA,GAApB/C,oBAAoB;AAuF7B,eAAeA,oBAAoB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}